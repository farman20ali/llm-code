{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "Please provide list all accidents involving pedestrians"}, {"role": "assistant", "content": "```sql\nSELECT ar.report_id, ar.accident_location, ar.created_at, ar.description\nFROM accident_reports ar\nJOIN vehicle_involved vi ON ar.vehicle_involved_id = vi.id\nWHERE vi.label = 'Pedestrian';\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "Count accidents by severity level in Karachi"}, {"role": "assistant", "content": "```sql\nSELECT severity, COUNT(*) AS accident_count\nFROM accident_reports\nWHERE accident_location = 'Karachi'\nGROUP BY severity;\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "I need to show accidents with hospital transfers in the last week"}, {"role": "assistant", "content": "```sql\nSELECT ar.report_id, ar.accident_location, ar.created_at, pc.name AS casualty_name, pc.hospital_name\nFROM accident_reports ar\nJOIN passenger_casualties pc ON ar.report_id = pc.report_id\nWHERE pc.hospital_name IS NOT NULL\nAND ar.created_at >= NOW() - INTERVAL '7 days';\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "How many accidents involved motorcycles in Karachi?"}, {"role": "assistant", "content": "```sql\nSELECT COUNT(ar.report_id) AS motorcycle_accidents_count\nFROM accident_reports ar\nJOIN vehicle_involved vi ON ar.vehicle_involved_id = vi.id\nWHERE vi.label = 'Motorbike' AND ar.accident_location = 'Karachi';\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "Show accidents with hospital transfers in the last week"}, {"role": "assistant", "content": "```sql\nSELECT ar.report_id, ar.accident_location, ar.created_at, pc.name AS casualty_name, pc.hospital_name\nFROM accident_reports ar\nJOIN passenger_casualties pc ON ar.report_id = pc.report_id\nWHERE pc.hospital_name IS NOT NULL\nAND ar.created_at >= NOW() - INTERVAL '7 days';\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "List all dispatches that took more than 30 minutes"}, {"role": "assistant", "content": "```sql\nSELECT report_id, created_at, officer_name, officer_designation, officer_contact_no\nFROM accident_reports\nWHERE EXTRACT(EPOCH FROM (NOW() - created_at)) > 1800;\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "List me the total number of accidents in Karachi"}, {"role": "assistant", "content": "```sql\nSELECT COUNT(*) AS total_accidents\nFROM accident_reports\nWHERE accident_location = 'Karachi';\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "I need to how many accidents involved motorcycles in karachi?"}, {"role": "assistant", "content": "```sql\nSELECT COUNT(ar.report_id) AS motorcycle_accidents_count\nFROM accident_reports ar\nJOIN vehicle_involved vi ON ar.vehicle_involved_id = vi.id\nWHERE vi.label = 'Motorbike' AND ar.accident_location = 'Karachi';\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "Could you how many accidents involved motorcycles in karachi??"}, {"role": "assistant", "content": "```sql\nSELECT COUNT(*) AS motorcycle_accidents_count\nFROM accident_reports\nJOIN vehicle_involved ON accident_reports.vehicle_involved_id = vehicle_involved.id\nWHERE vehicle_involved.label = 'Motorbike' AND accident_reports.accident_location = 'Karachi';\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "Could you show accidents with hospital transfers in the last week?"}, {"role": "assistant", "content": "```sql\nSELECT ar.report_id, ar.accident_location, ar.created_at, pc.name AS casualty_name, pc.hospital_name\nFROM accident_reports ar\nJOIN passenger_casualties pc ON ar.report_id = pc.report_id\nWHERE pc.hospital_name IS NOT NULL\nAND ar.created_at >= NOW() - INTERVAL '7 days';\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "Give me count accidents by weather condition"}, {"role": "assistant", "content": "```sql\nSELECT wc.condition, COUNT(ar.report_id) AS accident_count\nFROM accident_reports ar\nJOIN weather_condition wc ON ar.weather_condition = wc.id\nGROUP BY wc.condition;\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "Show accidents that occurred during rainy weather"}, {"role": "assistant", "content": "```sql\nSELECT ar.report_id, ar.accident_location, ar.created_at, wc.condition\nFROM accident_reports ar\nJOIN weather_condition wc ON ar.weather_condition = wc.id\nWHERE wc.condition = 'Rain';\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "Show me the total number of accidents in Karachi"}, {"role": "assistant", "content": "```sql\nSELECT COUNT(*) AS total_accidents\nFROM accident_reports\nWHERE accident_location = 'Karachi';\n```"}]}
{"messages": [{"role": "system", "content": "You are a PostgreSQL SQL assistant for a traffic accident reporting system. Generate specific and optimized SQL SELECT statements based on user questions. ALWAYS use EXACT column names from the provided schema. Always include relevant WHERE clauses and aggregations as needed. Never use SELECT * unless specifically requested. Use correct table and column names from the schema. Do not include explanations or comments.Here is the Schema : $Table: accident_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor Collision, Major Collision, Vehicle Rollover, Hit and Run, Pedestrian Accident\n\nTable: vehicle_involved\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Pedestrian, Bicycle, Motorbike, Truck, Taxi, Car, Water Tanker, Rickshaw/Chinqchi, Dumper, Trailer, Loading Pickup, Others\n\nTable: patient_victim\nColumns: id(SERIAL), label(VARCHAR), description(TEXT)\nValues: Rider, Pillion Rider, Car/Taxi Driver, Passenger, Pedestrian, Rickshaw/Chinqchi Driver, Rickshaw/Chinqchi Passenger, Others\n\nTable: apparent_cause\nColumns: id(SERIAL), cause(VARCHAR(50) NOT NULL), other_details(VARCHAR(255))\nValues: Over speeding, Brake Failure, Road Condition, Driver Negligence, Weather Conditions, Mechanical Failure, Other\n\nTable: weather_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Clear, Rain, Fog, Dust, Windy\n\nTable: visibility\nColumns: id(SERIAL), level(VARCHAR(50) NOT NULL)\nValues: Good, Moderate, Poor\n\nTable: road_surface_condition\nColumns: id(SERIAL), condition(VARCHAR(50) NOT NULL)\nValues: Dry, Wet, Damaged, Under Construction\n\nTable: road_type\nColumns: id(SERIAL), type(VARCHAR(50) NOT NULL)\nValues: Highway, Urban Road, Intersection, Service Road, Bridge/Flyover\n\nTable: road_signage\nColumns: id(SERIAL), status(VARCHAR(50) NOT NULL)\nValues: Clear, Faded, Missing\n\nTable: case_referred_to\nColumns: id(SERIAL), unit(VARCHAR(50) NOT NULL)\nValues: Investigation Unit, Traffic Police, Legal Aid, Not Applicable\n\nTable: preliminary_fault_assessment\nColumns: id(SERIAL), fault(VARCHAR(50) NOT NULL)\nValues: Driver 1, Driver 2, Road Condition, Mechanical Failure, Shared Fault, Undetermined\n\nTable: gender_types\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: female, male, other\n\nTable: vehicle_condition\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Total Loss\n\nTable: fitness_certificate_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Valid, Expired, Not Available\n\nTable: causalities_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Causalities, Passengers, Injured\n\nTable: injury_severity\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Minor, Major, Fatal\n\nTable: road_tax_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Paid, Unpaid, Pending\n\nTable: insurance_status\nColumns: id(SERIAL), label(VARCHAR), description(VARCHAR)\nValues: Active, Expired, Pending Renewal\n\nTable: accident_reports\nColumns: report_id(serial4), latitude(numeric(9, 6) NULL), longitude(numeric(9, 6) NULL), accident_location(varchar(255) NULL), gis_coordinates(GEOMETRY(Point, 4326) NULL), user_id(int4), num_affecties(int4), age(int4), created_at(timestamp), status(varchar(50) DEFAULT), severity(int4), image_uri(text), audio_uri(text), video_uri(text), description(text), officer_name(VARCHAR(255)), officer_designation(VARCHAR(100)), officer_contact_no(VARCHAR(20)), officer_notes(TEXT), weather_condition(int4), visibility(int4), road_surface_condition(int4), road_type(int4), road_markings(int4), preliminary_fault(int4), gender(int4), cause(int4), vehicle_involved_id(int4), patient_victim_id(int4), accident_type_id(int4)\nForeign Keys:\naccident_reports.accident_type_id -> accident_types.id\naccident_reports.patient_victim_id -> patient_victim.id\naccident_reports.user_id -> users.id\naccident_reports.vehicle_involved_id -> vehicle_involved.id\naccident_reports.weather_condition -> weather_condition.id\naccident_reports.visibility -> visibility.id\naccident_reports.road_surface_condition -> road_surface_condition.id\naccident_reports.road_type -> road_type.id\naccident_reports.road_markings -> road_signage.id\naccident_reports.preliminary_fault -> preliminary_fault_assessment.id\naccident_reports.gender -> gender_types.id\naccident_reports.cause -> apparent_cause.id\n\nTable: accident_report_images\nColumns: image_id(SERIAL), report_id(INT), image_uri(TEXT), uploaded_at(TIMESTAMP)\nForeign Keys:\naccident_report_images.report_id -> accident_reports.report_id\n\nTable: vehicle_details\nColumns: id(SERIAL), report_id(INT), registration_no(VARCHAR(50)), type(int4), condition(VARCHAR(50)), fitness_certificate_status(VARCHAR(50)), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\nvehicle_details.type -> vehicle_involved.id\nvehicle_details.insurance_status -> insurance_status.id\nvehicle_details.road_tax_status -> road_tax_status.id\n\nTable: driver_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), cnic_no(VARCHAR(15)), license_no(VARCHAR(50)), contact_no(VARCHAR(20))\n\nTable: passenger_casualties\nColumns: id(SERIAL), report_id(INT), type(int4), name(VARCHAR(255)), hospital_name(VARCHAR(255)), injury_severity(int4)\nForeign Keys:\npassenger_casualties.injury_severity -> injury_severity.id\npassenger_casualties.type -> causalities_status.id\n\nTable: evidence_collection\nColumns: id(SERIAL), report_id(INT), photos(BOOLEAN), videos(BOOLEAN), sketch(BOOLEAN)\n\nTable: witness_details\nColumns: id(SERIAL), report_id(INT), name(VARCHAR(255)), contact_no(VARCHAR(20)), address(TEXT)\n\nTable: follow_up_actions\nColumns: id(SERIAL), report_id(INT), fir_registered(BOOLEAN), fir_number(VARCHAR(50)), challan_issued(BOOLEAN), challan_number(VARCHAR(50)), case_referred_to(int4)\nForeign Keys:\nfollow_up_actions.case_referred_to -> case_referred_to.id\n\nTable: accident_vehicle_fitness\nColumns: fitness_id(SERIAL), report_id(INT), vehicle_no(VARCHAR(50) NOT NULL), fitness_certificate_valid(BOOLEAN), expiry_date(DATE), road_tax_status(int4), insurance_status(int4)\nForeign Keys:\naccident_vehicle_fitness.report_id -> accident_reports.report_id\naccident_vehicle_fitness.road_tax_status -> road_tax_status.id\naccident_vehicle_fitness.insurance_status -> insurance_status.id"}, {"role": "user", "content": "How many accidents involved motorcycles in Karachi?"}, {"role": "assistant", "content": "```sql\nSELECT COUNT(ar.report_id) AS motorcycle_accidents_count\nFROM accident_reports ar\nJOIN vehicle_involved vi ON ar.vehicle_involved_id = vi.id\nWHERE vi.label = 'Motorbike' AND ar.accident_location = 'Karachi';\n```"}]}
